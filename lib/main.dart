import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:desktopapp/essential.dart';
import 'package:desktopapp/model.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:bitsdojo_window/bitsdojo_window.dart';

void main() {
  runApp(MyApp());
  doWhenWindowReady(() {
    final win = appWindow;
    final initialSize = Size(700, 450);
    win.minSize = initialSize;
    win.size = initialSize;
    win.alignment = Alignment.center;
    win.title = "Custom window with Flutter";
    win.show();
  });
}

const borderColor = Color(0xFF583d72);
bool selected1 = false;
bool selected2 = false;
bool selected3 = false;

class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
        debugShowCheckedModeBanner: false,
        home: Scaffold(
            body: WindowBorder(
                color: borderColor,
                width: 1,
                child: Row(children: [LeftSide(), RightSide()]))));
  }
}

// const sidebarColor = Color(0xFFF6A00C);

class LeftSide extends StatefulWidget {
  @override
  _LeftSideState createState() => _LeftSideState();
}

class _LeftSideState extends State<LeftSide> {
  @override
  Widget build(BuildContext context) {
    return SizedBox(
        width: 200,
        child: Container(
            decoration: BoxDecoration(
              gradient: LinearGradient(
                begin: Alignment.topCenter,
                end: Alignment.bottomCenter,
                colors: [
                  Color(0xFF583d72),
                  Color(0xFF635380),
                  Color(0xFF9f5f80)
                ],
              ),
            ),
            // color: sidebarColor,
            child: Column(
              children: [
                WindowTitleBarBox(child: MoveWindow()),
                Expanded(
                    child: Container(
                        child: ListView(
                  physics: BouncingScrollPhysics(),
                  children: [
                    SizedBox(height: 50),
                    InkWell(
                        onTap: () {
                          setState(() {
                            selected1 = true;
                            selected2 = false;
                            selected3 = false;
                            print("1");
                          });
                        },
                        child: panelitem("Datas of the Dam", selected1)),
                    SizedBox(height: 20),
                    InkWell(
                        onTap: () {
                          setState(() {
                            selected2 = true;
                            selected3 = false;
                            selected1 = false;
                            print("2");
                          });
                        },
                        child: panelitem("About Us", selected2)),
                    SizedBox(height: 20),
                    InkWell(
                        onTap: () {
                          setState(() {
                            selected3 = true;
                            selected2 = false;
                            selected1 = false;
                            print("3");
                          });
                        },
                        child: panelitem("Settings", selected3)),
                    Container(),
                  ],
                )))
              ],
            )));
  }
}

const backgroundStartColor = Color(0xFFFFD500);
const backgroundEndColor = Color(0xFFF6A00C);

class RightSide extends StatefulWidget {
  @override
  _RightSideState createState() => _RightSideState();
}

class _RightSideState extends State<RightSide> {
  List<Autogenerated> datas = [];
  Future<List<Autogenerated>> fetchdata() async {
    var urL =
        "https://script.google.com/macros/s/AKfycbwHX3ih0sJKA-A36xeToC4chDHgXbr7sCzu1HviWSJNKKM4LsTe3qhMfg/exec";
    var response = await http.get(Uri.parse(urL));
    List<Autogenerated> datas = [];
    if (response.statusCode == 200) {
      var datajson = jsonDecode(response.body);
      for (var i in datajson) {
        datas.add(Autogenerated.fromJson(i));
      }
    }
    return datas;
  }

  @override
  Widget build(BuildContext context) {
    fetchdata().then((value) {
      setState(() {
        datas.addAll(value);
      });
    });
    return Expanded(
        child: Container(
            decoration: BoxDecoration(color: Color(0xffffffff)),
            child: Column(children: [
              WindowTitleBarBox(
                  child: Row(children: [
                Expanded(child: MoveWindow()),
                WindowButtons()
              ])),
              selected1
                  ? Expanded(
                      child: (datas.length != 0)
                          ? Container(
                              child: ListView(
                                physics: BouncingScrollPhysics(),
                                children: [
                                  SizedBox(height: 50),
                                  Row(children: [
                                    SizedBox(width: 30),
                                    Expanded(
                                        child: displayContainer(
                                            "4680ff",
                                            "af42c1",
                                            "Humidity",
                                            "${datas[datas.length - 1].humidity}",
                                            CupertinoIcons.drop_fill)),
                                    SizedBox(width: 30),
                                    Expanded(
                                        child: displayContainer(
                                            "ffc107",
                                            "fd7e14",
                                            "Float Sensor",
                                            "${datas[datas.length - 1].flowmeter}",
                                            Icons.waves)),
                                    SizedBox(width: 30),
                                  ]),
                                  SizedBox(height: 50),
                                  Row(children: [
                                    SizedBox(width: 30),
                                    Expanded(
                                        child: displayContainer(
                                            "d63384",
                                            "dc3545",
                                            "Temperature",
                                            "${datas[datas.length - 1].temperature}",
                                            CupertinoIcons.thermometer)),
                                    SizedBox(width: 30),
                                    Expanded(
                                        child: displayContainer(
                                            "20c997",
                                            "198754",
                                            "Distance",
                                            "${datas[datas.length - 1].distance}",
                                            CupertinoIcons.tropicalstorm)),
                                    SizedBox(width: 30),
                                  ]),
                                ],
                              ),
                            )
                          : Column(
                              children: [
                                Container(
                                    padding:
                                        EdgeInsets.fromLTRB(10, 150, 10, 10),
                                    child: CircularProgressIndicator()),
                                Container()
                              ],
                            ))
                  : Container(
                      child: selected2
                          ? Container(
                              child: Text("Not Completed",
                                  textAlign: TextAlign.center,
                                  style: TextStyle(
                                      height: 1,
                                      decoration: TextDecoration.none,
                                      color: Colors.red,
                                      letterSpacing: 1.5,
                                      fontWeight: FontWeight.w300,
                                      fontSize: 50,
                                      fontFamily: "Teko")))
                          : Container(
                              child: Text("Not Completed",
                                  textAlign: TextAlign.center,
                                  style: TextStyle(
                                      height: 1,
                                      decoration: TextDecoration.none,
                                      color: Colors.red,
                                      letterSpacing: 1.5,
                                      fontWeight: FontWeight.w300,
                                      fontSize: 50,
                                      fontFamily: "Teko"))))
            ])));
  }
}

final buttonColors = WindowButtonColors(
    iconNormal: Color(0xFF583d72),
    mouseOver: Color(0xFF583d72),
    mouseDown: Color(0xFF9f5f80),
    iconMouseOver: Color(0xFFFFFFFF),
    iconMouseDown: Color(0xFF583d72));

final closeButtonColors = WindowButtonColors(
    mouseOver: Color(0xFFD32F2F),
    mouseDown: Color(0xFFB71C1C),
    iconNormal: Color(0xFF583d72),
    iconMouseOver: Colors.white);

class WindowButtons extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        MinimizeWindowButton(colors: buttonColors),
        MaximizeWindowButton(colors: buttonColors),
        CloseWindowButton(colors: closeButtonColors),
      ],
    );
  }
}

//////////////////////////////////////////
/*          👇👇Widgets Here👇👇         */
//////////////////////////////////////////
Widget panelitem(title, selection) {
  return !selection
      ? Container(
          decoration: BoxDecoration(
              color: Color(0x00ffffff),
              borderRadius: BorderRadius.circular(10)),
          height: 50,
          child: Center(
              child: Text(title,
                  style: TextStyle(
                      decoration: TextDecoration.none,
                      color: HexColor("ffffff"),
                      letterSpacing: 1.5,
                      fontWeight: FontWeight.w300,
                      fontSize: 20,
                      fontFamily: "Teko"))))
      : Container(
          height: 50,
          decoration: BoxDecoration(
            color: Colors.white,
          ),
          child: Center(
              child: Text(title,
                  style: TextStyle(
                      decoration: TextDecoration.none,
                      color: HexColor("000000"),
                      letterSpacing: 1.5,
                      fontWeight: FontWeight.w300,
                      fontSize: 20,
                      fontFamily: "Teko"))));
}

Widget displayContainer(coloring1, coloring2, title, data, icon) {
  return Container(
      decoration: BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
            colors: [
              HexColor(coloring1),
              HexColor(coloring2),
            ],
          ),
          borderRadius: BorderRadius.only(
              topLeft: Radius.circular(20), bottomRight: Radius.circular(20))),
      height: 150,
      child: Column(
        children: [
          SizedBox(height: 15),
          Icon(icon, color: Colors.white),
          // SizedBox(height: 20),
          Text(title,
              textAlign: TextAlign.center,
              style: TextStyle(
                  decoration: TextDecoration.none,
                  color: HexColor("ffffff"),
                  letterSpacing: 1.5,
                  fontWeight: FontWeight.w300,
                  fontSize: 25,
                  fontFamily: "Teko")),
          SizedBox(height: 1),
          Text(data,
              textAlign: TextAlign.center,
              style: TextStyle(
                  height: 1,
                  decoration: TextDecoration.none,
                  color: HexColor("ffffff"),
                  letterSpacing: 1.5,
                  fontWeight: FontWeight.w300,
                  fontSize: 50,
                  fontFamily: "Teko"))
        ],
      ));
}

//////////////////////////////////////////
/*          👆👆Widgets Here👆👆         */
//////////////////////////////////////////